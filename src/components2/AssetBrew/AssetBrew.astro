<asset-brew>
    <dialog id="assetbrew-modal" class="modal">
        <section class="modal-box flex flex-col gap-4">
            <label class="btn" id="assetbrew-upload">
                <input type="file" accept="image/*" hidden />
                <span>Upload</span>
            </label>
            <div class="assets | flex flex-wrap gap-4 max-h-96 overflow-y-auto">
            </div>
        </section>

        <form method="dialog" class="modal-backdrop">
            <button>close</button>
        </form>
    </dialog>
</asset-brew>

<script>
import { editorInstance } from "@/stores/playground";
import { getAssets, getImportStatement } from "./assets";

class AssetBrew extends HTMLElement {
    constructor() {
        super();
    }

    async addAsset(asset: any) {
        const assets = this.querySelector(".assets");
        const modal = this.querySelector<HTMLDialogElement>("#assetbrew-modal");
        const assetElement = document.createElement("div");

        assetElement.classList.add(
            "asset",
            "flex",
            "flex-col",
            "items-center",
            "cursor-pointer",
            "btn",
            "h-full",
        );

        assetElement.innerHTML = `
                    <img src="${
            asset?.preview ?? asset?.url
        }" alt="${asset?.name}"/>
                    <p>
                        <div class="badge badge-neutral">${asset?.type}</div>
                        ${asset?.name}
                    </p>
                `;

        assetElement.addEventListener("click", () => {
            modal?.close();
            // insert in cursor in monaco
            editorInstance.get()?.executeEdits("", [
                {
                    range: editorInstance.get()?.getSelection()!,
                    text: getImportStatement(asset),
                    forceMoveMarkers: true,
                },
            ]);
        });

        assets?.appendChild(assetElement);
    }

    async addAssetList() {
        const assetList = await getAssets();

        assetList.forEach((asset) => {
            this.addAsset(asset);
        });
    }
}

customElements.define("asset-brew", AssetBrew);
</script>
