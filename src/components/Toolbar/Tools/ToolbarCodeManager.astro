---
import projectIcon from "../../../assets/toolbar/project.png";
import ToolbarButton from "../ToolbarButton.astro";
---

<div class="dropdown dropdown-end flex-grow-0 flex-shrink-0 basis-24 h-full">
    <ToolbarButton
        id="code-manager"
        icon={projectIcon}
        tooltip="Manage code"
    />

    <ul
        tabindex="0"
        class="dropdown-content z-[1] menu p-2 shadow bg-base-200 rounded-box w-52"
    >
        <li>
            <button class="btn btn-sm" id="pj-export-html">
                Export as HTML
            </button>
            <button class="btn btn-sm" id="pj-export-code">
                Export Code
            </button>
            <label class="btn btn-sm" id="pj-import-code">
                Import Code

                <input
                    type="file"
                    class="hidden"
                    accept=".js"
                />
            </label>
        </li>
    </ul>
</div>

<script>
    import {
        $editorInstance,
        $gameViewElement,
        $playgroundCode,
    } from "../../../stores";
    import { download } from "../../../util/download";

    const projectExportHTML = document.getElementById("pj-export-html");
    const projectExportCode = document.getElementById("pj-export-code");
    const projectImportCode = document.getElementById("pj-import-code");
    const projectImportCodeInput = projectImportCode?.querySelector<
        HTMLInputElement
    >("input");

    projectExportHTML?.addEventListener("click", () => {
        const gameView = $gameViewElement.get();
        const iframeContent = gameView?.iframe?.contentDocument?.documentElement
            .outerHTML;

        download(
            iframeContent ?? "",
            "index.html",
            "text/html",
        );
    });

    projectExportCode?.addEventListener("click", () => {
        download(
            $playgroundCode.get(),
            "index.kaplayground.js",
            "text/javascript",
        );
    });

    projectImportCodeInput?.addEventListener("change", (e) => {
        const file = (e?.target as any)?.["files"][0];
        if (!file) return;

        const reader = new FileReader();
        reader.onload = (e) => {
            $playgroundCode.set(e.target!.result);
            $editorInstance.get()?.setValue($playgroundCode.get());
            $gameViewElement.get()?.run();
        };

        reader.readAsText(file);
    });
</script>
